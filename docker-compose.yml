version: '3'

services:
  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    links:
      - db
    environment:
      # Change to prod in production
      - SYMFONY_ENV=dev
      - EXTRA_WHITELIST=172.18.0.1
    volumes:
      # Comment out the next line in production
      - ./:/srv/symfony:rw
      # This is for assets:install
      - ./web:/srv/symfony/web:rw
      # If you develop on Linux, comment out the following volumes to just use bind-mounted project directory from host
      - /srv/symfony/var/
      - /srv/symfony/var/cache/
      - /srv/symfony/var/logs/
      - /srv/symfony/var/sessions/
      - ./vendor:/srv/symfony/vendor/
      - ./composer.json:/srv/symfony/composer.json
      - ./composer.lock:/srv/symfony/composer.lock
  db:
    image: mysql
    environment:
      - MYSQL_DATABASE=symfony
      # You should definitely change the password in production
      - MYSQL_USER=symfony
      - MYSQL_PASSWORD=symfony
      - MYSQL_RANDOM_ROOT_PASSWORD=true
    volumes:
#      - db-data:/var/lib/mysql:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      - ./docker/db/data:/var/lib/mysql:rw
    ports:
      - "3306:3306"
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: ./Dockerfile
    volumes:
      # Comment out the next line in production
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./web:/srv/symfony/web:ro
    ports:
      - "8080:80"
    links:
      - app
      - db

volumes:
  app-web: {}
  db-data: {}
